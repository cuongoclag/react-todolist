{"version":3,"sources":["components/TaskListContextProvider.js","components/TaskForm.js","components/Task.js","components/TaskList.js","components/Header.js","App.js","reportWebVitals.js","index.js"],"names":["TaskListContext","createContext","TaskListContextProvider","props","initialState","JSON","parse","localStorage","getItem","useState","tasks","setTasks","editItem","setEditItem","useEffect","setItem","stringify","Provider","value","addTask","title","id","length","removeTask","filter","task","clearList","findItem","item","find","editTask","newTask","map","children","TaskForm","useContext","setTitle","className","onSubmit","e","preventDefault","onChange","target","type","placeholder","required","onClick","Task","TaskList","index","Header","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.220a5c0d.chunk.js","sourcesContent":["import React, { createContext, useEffect, useState } from 'react'\r\nimport uuid from 'uuid'\r\n\r\nexport const TaskListContext = createContext();\r\nfunction TaskListContextProvider(props) {\r\n\r\n    const initialState = JSON.parse(localStorage.getItem('tasks')) || []\r\n\r\n    const [tasks, setTasks] = useState(initialState)\r\n\r\n    const [editItem, setEditItem] = useState(null)\r\n\r\n    const addTask = (title) => {\r\n        setTasks([...tasks, {title, id: tasks.length + 1}])\r\n    }\r\n\r\n    const removeTask = (id) => {\r\n        setTasks(tasks.filter(task => task.id !== id))\r\n    }\r\n\r\n    const clearList = () => {\r\n        setTasks([])\r\n    }\r\n\r\n    const findItem = (id) => {\r\n        const item = tasks.find(task => task.id === id);\r\n        setEditItem(item)\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem('tasks', JSON.stringify(tasks))\r\n    }, [tasks])\r\n\r\n\r\n    const editTask = (title, id) => {\r\n        const newTask = tasks.map(task => (\r\n            task.id === id ? {title, id} : task\r\n        ))\r\n        setTasks(newTask);\r\n        setEditItem(null)\r\n    }\r\n    return (\r\n        <TaskListContext.Provider \r\n            value={{\r\n                tasks, \r\n                addTask,\r\n                removeTask,\r\n                clearList,\r\n                findItem,\r\n                editTask,\r\n                editItem}}>\r\n            {props.children}\r\n        </TaskListContext.Provider>\r\n    )\r\n}\r\n\r\nexport default TaskListContextProvider\r\n","import React, { useContext, useEffect, useState } from 'react'\r\nimport {TaskListContext} from './TaskListContextProvider'\r\n\r\nfunction TaskForm() {\r\n\r\n    const {addTask, clearList, editItem, editTask} = useContext(TaskListContext)\r\n\r\n    const [title, setTitle] = useState(\"\")\r\n\r\n    const handleChange = (e) => {\r\n        setTitle(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if(!editItem){\r\n            addTask(title);\r\n            setTitle(\"\");\r\n        }  else {\r\n            editTask(title, editItem.id)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(editItem){\r\n            setTitle(editItem.title)\r\n        } else {\r\n            setTitle(\"\")\r\n        }\r\n    }, [editItem])\r\n    return (\r\n        <form className=\"form\" onSubmit={handleSubmit}>\r\n            <input \r\n                value={title}\r\n                onChange={handleChange}\r\n                type=\"text\" \r\n                className=\"task-input\" \r\n                placeholder=\"Add Task...\" \r\n                required/>\r\n            <div className=\"buttons\">\r\n                <button type=\"submit\" className=\"btn add-task-btn\">\r\n                    {editItem ? 'Edit Task' : 'Add Task'}\r\n                </button>\r\n                <button className=\"btn clear-btn\" onClick={clearList}>Clear</button>\r\n            </div>\r\n            \r\n        </form>\r\n    )\r\n}\r\n\r\nexport default TaskForm\r\n","import React, { useContext, useState } from 'react'\r\nimport {TaskListContext} from './TaskListContextProvider'\r\n\r\nfunction Task({task}) {\r\n    const {removeTask, findItem} = useContext(TaskListContext)\r\n\r\n    return (\r\n        <li className=\"list-item\">\r\n            <span>{task.title}</span>\r\n            <div>\r\n                <button className=\"btn-delete task-btn\" onClick={() => removeTask(task.id)}>\r\n                    <i className=\"fas fa-trash-alt\"></i>\r\n                </button>\r\n                <button className=\"btn-edit task-btn\" onClick={() => findItem(task.id)}>\r\n                    <i className=\"fas fa-pen\"></i>\r\n                </button>\r\n            </div>\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default Task\r\n","import React, { useContext } from 'react'\r\nimport Task from './Task'\r\nimport {TaskListContext} from './TaskListContextProvider'\r\n\r\nfunction TaskList() {\r\n    const {tasks} = useContext(TaskListContext)\r\n    return (\r\n        <div>\r\n        {\r\n            tasks.length ? (\r\n                <ul className=\"list\">\r\n                {\r\n                    tasks.map((task) => {\r\n                        return <Task key={task.id} index={task.id} task={task}/>\r\n                    })\r\n                }\r\n                </ul>\r\n            ) : (\r\n                <div className=\"no-tasks\">No Tasks</div>\r\n            )\r\n        }\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TaskList\r\n","import React from 'react'\r\n\r\nfunction Header() {\r\n    return (\r\n        <div className='header'>\r\n            <h1>Task Manager</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\nimport './App.css';\nimport TaskForm from './components/TaskForm';\nimport TaskList from './components/TaskList';\nimport Header from './components/Header'\nimport TaskListContextProvider from './components/TaskListContextProvider';\n\n\nfunction App() {\n  return (\n    <TaskListContextProvider>\n        <div className=\"container\">\n          <div className=\"app-wrapper\">\n          <Header />\n            <div className=\"main\">\n            <TaskForm />\n            <TaskList />\n            </div>\n          </div>\n        </div>\n    </TaskListContextProvider>\n    \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}